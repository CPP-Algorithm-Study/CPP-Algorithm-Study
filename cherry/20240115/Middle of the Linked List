/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

// Linked List // two pointer 

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode *slow = head; // 한번에 한 노드씩 이동
        ListNode *fast = head; // 한번에 두 노드씩 이동 

        // fast 포인터와 fast의 다음 포인터가 null 가리킬 때까지 반복 
        while(fast!=nullptr && fast->next!=nullptr) // 리스트 끝에 도달 or 지나쳤을 때 
        {
            slow = slow->next; // 한칸 
            fast = fast->next->next; // 두칸
        }

        // 중간 가리킴 
        return slow;
    }
};
