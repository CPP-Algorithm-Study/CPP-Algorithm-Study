#include <string>
#include <vector>

using namespace std;

/*
<문제설명>
입력 : 민수의 현재 층수 (storey 최대 10^8)
출력 : 0층으로 가기 위해 필요한 마법의 돌의 최소값 

내용 
- -1,+1,-10,+10 등과 같이 절댓값이 10^c 형태인 정수들이 적힌 버튼이 있음
- 현재 층수+버튼에 적힌 값의 층으로 이동 (만약 음수이면 이동하지 않음)
- 층수는 0층부터 시작 
- 마법의 돌을 아끼기 위해 최소한의 버튼을 눌러 이동하려고 함 
*/

/*
<유의해야 할 점>
!! 숫자 5가 나왔을 경우

예1) 35 (높은자리가 5보다 작은 경우)
올라갈 경우 : 35+5 -> 40-40 => 9개 사용
내려갈 경우 : 35-5 -> 30-30 => 8개 사용

-> 내려가는게 유리

예2) 65 (높은자리가 5보다 크거나 같은 경우)
올라갈 경우 : 65+5 -> 70-70 => 9개 사용
내려갈 경우 : 65-5 -> 60-60 => 10개 사용

-> 올라가는게 유리

*/

// 최소 마법의 돌 개수 return 
int stone(int stair){
    
    if(stair < 10) return min(stair,10-stair+1); // 현재 층수 10 미만인 경우

    int dec = stair%10; // 내렸을 때
    int inc = 10-stair%10; // 올렸을 때

    // stone 호출을 통해 자리수 하나씩 처리(10^n 단위이므로) 
        // + 내리거나,올린 경우에 대한 1의 자리값 추가해주기 
    return min(stone((stair-dec)/10) +dec ,stone((stair+inc)/10) +inc );
}

int solution(int storey) {
    return stone(storey);
}
